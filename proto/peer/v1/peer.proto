syntax = "proto3";

package proto;

option go_package = "peer/v1;peerv1";
option java_multiple_files = true;

service PeerService {
  rpc AppendEntries(AppendEntriesRequest) returns (AppendEntriesResponse);
  rpc RequestVote(RequestVoteRequest) returns (RequestVoteResponse);
  rpc Submit(SubmitRequest) returns (SubmitResponse);
  rpc ChangeConfiguration(ChangeConfigurationRequest) returns (ChangeConfigurationResponse);
}

// AppendEntries RPCリクエスト
message AppendEntriesRequest {
  int32               term         = 1;
  int32               leaderId     = 2;
  int32               prevLogIndex = 3;
  int32               prevLogTerm  = 4;
  repeated LogEntry   entries      = 5;
  ConfigurationChange configChange = 6;
}

// AppendEntries RPCレスポンス
message AppendEntriesResponse {
  int32 term          = 1;
  bool  success       = 2;
  int32 conflictIndex = 3;
  int32 conflictTerm  = 4;
}

// RequestVote RPCリクエスト
message RequestVoteRequest {
  int32 term         = 1;
  int32 candidateId  = 2;
  int32 lastLogIndex = 3;
  int32 lastLogTerm  = 4;
}

// RequestVote RPCレスポンス
message RequestVoteResponse {
  int32 term        = 1;
  bool  voteGranted = 2;
}

// ログエントリ
message LogEntry {
  int32  term    = 1;
  int32  index   = 2;
  string command = 3;
}

message SubmitRequest {
  string command = 1;
}

message SubmitResponse {
  bool   success = 1;
  string address = 2;
}

message ChangeConfigurationRequest {
  Configuration newConfig = 1;
}

// Configuration Change Response
message ChangeConfigurationResponse {
  bool   success = 1;
  string address = 2;
}

// Configuration Change
message ConfigurationChange {
  Configuration oldConfig = 1;
  Configuration newConfig = 2;
}

// Configuration
message Configuration {
  repeated Peer peers = 1;
}

// Peer
message Peer {
  int32  id = 1;
  string address = 2;
}